export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="essembeh"

plugins=(alias-finder ansible asdf dnf docker dotnet emoji git gitignore golang helm istioctl kubectl minikube oc terraform thefuck tmux wd web-search zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh
source $HOME/.alias


PATH=$PATH:$(go env GOPATH)/bin/
PATH=$PATH:$HOME/.cargo/bin
PATH=$PATH:$HOME/.local/bin/
PATH=$PATH:$HOME/bin/
PATH=$PATH:/var/lib/snapd/snap/bin
PATH=$PATH:$HOME/.dotnet/tools/

# tmux
SHELL=$(which zsh)

# bash compatibilty
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

. "$HOME/.asdf/asdf.sh"
. "$HOME/.asdf/completions/asdf.bash"
export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
setopt EXTENDED_HISTORY


_dotnet_zsh_complete() 
{
  local completions=("$(dotnet complete "$words")")

  # If the completion list is empty, just continue with filename selection
  if [ -z "$completions" ]
  then
    _arguments '*::arguments: _normal'
    return
  fi

  # This is not a variable assignment, don't remove spaces!
  _values = "${(ps:\n:)completions}"
}

compdef _dotnet_zsh_complete dotnet

if [ $commands[skaffold] ]; then
  source <(skaffold completion zsh)
  compdef _skaffold skaffold
fi

# Ensure glob expression works like bash
setopt extended_glob

if [ $commands[podman] ]; then
  source <(podman completion zsh)
fi


if [ $commands[operator-sdk] ]; then
  source <(operator-sdk completion zsh)
fi

if [ $commands[opa] ]; then
  source <(opa completion zsh)
fi

if [ $commands[glow] ]; then
  source <(glow completion zsh)
fi

function nginx_here() {
  podman run -p 8080:80 -v $(pwd):/usr/share/nginx/html:ro -d --name nginx-here nginx
}

export KUBE_EDITOR="nvim"
