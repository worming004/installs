- hosts: localhost
  become: true
  name: Tools
  tasks:
    - name: General dependencies Ubuntu
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      become: true
      ansible.builtin.package:
        name:
        - autoconf
        - automake
        - build-essential
        - libssl-dev
        - libncurses5-dev
        - libsqlite3-dev
        - libbz2-dev
        - libedit-dev
        - unzip
        - python3-pip
        - inotify-tools
        - postgresql
        - postgresql-contrib
        - gpg
        - curl
        - redis-server
        - socat
        - maim
        - fd-find
        - libyaml-dev
        - buildah
        - pdftk
        state: present

    - name: General dependencies Arch
      when: ansible_distribution == "Archlinux"
      ansible.builtin.package:
        name:
        - autoconf
        - automake
        - buildah
        - bluez
        - bluez-utils
        - code
        - docker
        - docker-compose
        - fd
        - foot
        - fuse2
        - github-cli
        - greetd
        - greetd-tuigreet
        - grim
        - gnu-netcat
        - hyprland
        - hyprlock
        - hugo
        - inotify-tools
        - jq
        - keepassxc
        - kitty
        - languagetool
        - maim
        - man
        - ninja
        - os-prober
        - picom
        - pipewire
        - postgresql
        - ripgrep
        - slurp
        - spotify-launcher
        - tcl
        - tk
        - noto-fonts-emoji
        - restic
        - skaffold
        - openssh
        - thunar
        - ttf-nerd-fonts-symbols
        - ttf-cascadia-code-nerd
        - unzip
        - waybar
        - wget
        - wireplumber
        - wl-clipboard
        - wofi
        - xorg-xwayland
        state: present

    - name: Obsolete dependencies Arch
      when: ansible_distribution == "Archlinux"
      ansible.builtin.package:
        name:
          - pinta
        state: absent

    - name: Nice tools
      become: "{{ ansible_facts['distribution'] != 'MacOSX' }}"
      ansible.builtin.package:
        name:
        - neofetch
        - thefuck
        - ranger
        - zsh
        - bat
        - podman
        - most
        - mercurial
        - meson
        - jq
        state: present
    
    - name: Tmux installation
      become: "{{ ansible_facts['distribution'] != 'MacOSX' }}"
      ansible.builtin.package:
        name:
          - tmux
        state: present

        # TODO: install dotnet for macos
    - name: Dotnet installation
      become: true
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' 
      ignore_errors: true
      ansible.builtin.package:
        name:
          - dotnet-sdk-9.0
          - dotnet-runtime-9.0
          - dotnet-sdk-8.0
          - dotnet-runtime-8.0
          - dotnet-sdk-6.0
          - dotnet-runtime-6.0
        state: present

    - name: Asdf installation
      become: false
      ansible.builtin.git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: ~/.asdf
        version: v0.14.0

    - name: Zsh auto suggestion
      become: false
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    - name: Zsh syntax-highlighting
      become: false
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

    - name: Zsh terraform
      become: false
      ansible.builtin.git:
        repo: https://github.com/macunha1/zsh-terraform
        dest: ~/.oh-my-zsh/custom}/plugins/terraform

    - name: Zsh common config file
      become: false
      ansible.builtin.copy:
        src: ./.zshrc.common
        dest: ~/.zshrc.common
        mode: '0644'

    - name: dlDockerFile
      become: false
      ansible.builtin.copy:
        src: ./.dldockerfile
        dest: ~/.dldockerfile
        mode: '0644'

    - name: Alias file
      become: false
      ansible.builtin.copy:
        src: ./.alias
        dest: ~/.alias
        mode: '0644'

    - name: Functions file
      become: false
      ansible.builtin.copy:
        src: ./.functions.sh
        dest: ~/.functions.sh
        mode: '0644'

    - name: Source common zsh config
      become: false
      ansible.builtin.lineinfile:
        dest: ~/.zshrc
        line: 'source ~/.zshrc.common'

    - name: Neovim configuration
      become: false
      ansible.builtin.git:
        repo: git@github.com:worming004/nvim-ide.git
        dest: ~/.config/nvim

    - name: Tmux plugins
      become: false
      ansible.builtin.git:
        repo: git@github.com:tmux-plugins/tpm
        dest: ~/.config/tmux-plugins/tpm

    - name: Tmux configuration
      become: false
      ansible.builtin.git:
        repo: git@github.com:worming004/tmux-conf.git
        dest: ~/.config/tmux

    - name: Kitty configuration
      become: false
      ansible.builtin.git:
        repo: git@github.com:worming004/kitty.git
        dest: ~/.config/kitty

    - name: Hyprland configuration
      become: false
      ansible.builtin.git:
        repo: git@github.com:worming004/hyprland.git
        dest: ~/.config/hypr/

    - name: Waybar configuration
      become: false
      ansible.builtin.git:
        repo: git@github.com:worming004/waybar.git
        dest: ~/.config/waybar

    - name: Ensure ~/.local/bin dir exists
      become: false
      ansible.builtin.file:
        path: ~/.local/bin
        state: directory
